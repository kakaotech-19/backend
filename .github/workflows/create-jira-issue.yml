name: Sync Jira with GitHub Issue
on:
  issues:
    types:
      - opened # github 이슈 생성 시, jira 하위 작업 타입의 이슈 생성
      - edited # github 이슈 업데이트 시, 관련 jira 이슈 업데이트
      - closed # github 이슈 닫을 시, 관련 jira 이슈도 close

jobs:
  sync-jira-issue:
    name: Sync Jira with GitHub Issue
    runs-on: ubuntu-latest
    steps:
      - name: Login to Jira
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}

      - name: Checkout main code
        if: github.event.action == 'opened' || github.event.action == 'edited'
        uses: actions/checkout@v4
        with:
          ref: main

      # 다른 레포에서 파일 가져오기
      - name: Fetch issue template from other repo
        if: github.event.action == 'opened' || github.event.action == 'edited'
        run: |
          curl -H "Accept: application/vnd.github.v3.raw" \
            -o ./feature.yml \
            https://api.github.com/repos/kakaotech-19/.github/contents/.github/ISSUE_TEMPLATE/feature.yml
      # 가져온 파일을 Issue Parser에 사용
      - name: Issue Parser
        if: github.event.action == 'opened' || github.event.action == 'edited'
        uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: ./feature.yml

      - name: Log Issue Parser
        if: github.event.action == 'opened' || github.event.action == 'edited'
        run: |
          echo '${{ steps.issue-parser.outputs.jsonString }}'

      - name: Convert markdown to Jira Syntax
        if: github.event.action == 'opened' || github.event.action == 'edited'
        uses: peter-evans/jira2md@v1
        id: md2jira
        with:
          input-text: |
            ### Github Issue Link
            - ${{ github.event.issue.html_url }}
            
            ${{ github.event.issue.body }}
          mode: md2jira

      # 이슈 생성 로직 (새로운 이슈를 생성하는 경우)
      - name: Create Jira Sub-task Issue
        if: github.event.action == 'opened'
        id: create-jira-issue
        uses: atlassian/gajira-create@v3
        with:
          project: TODAK
          issuetype: Sub-task
          summary: "${{ github.event.issue.title }}"
          description: "${{ steps.md2jira.outputs.output-text }}"
          fields: |
            {
              "parent": {
                "key": "${{ steps.issue-parser.outputs.issueparser_parentKey }}"
              }
            }
      - name: Log created Jira issue
        if: github.event.action == 'opened'
        run: echo "Created Jira Issue Key:${{ steps.create-jira-issue.outputs.issue }}"

      # 이슈 업데이트 및 닫기 시, 제목에서 Jira 이슈 키를 파싱
      - name: Extract Jira Issue Key from GitHub issue title
        if: github.event.action == 'edited' || github.event.action == 'closed'
        run: |
          jira_key=$(echo "${GITHUB_ISSUE_TITLE}" | grep -oE 'TODAK-[0-9]+' | head -n 1)
          if [ -z "$jira_key" ]; then
            echo "Jira key not found in issue title"
            exit 1
          else
            echo "$jira_key" > jira_key.txt
            echo "Jira key extracted: $jira_key"
          fi
        env:
          GITHUB_ISSUE_TITLE: ${{ github.event.issue.title }}


      - name: Check if jira_key.txt exists and has content
        if: github.event.action == 'edited' || github.event.action == 'closed'
        run: |
          if [ -s jira_key.txt ]; then
            echo "jira_key.txt exists and is not empty"
            cat jira_key.txt
          else
            echo "jira_key.txt does not exist or is empty"
            exit 1
          fi
          
      - name: Log extracted Jira Issue Key
        if: github.event.action == 'edited' || github.event.action == 'closed'
        run: |
          echo "Jira Issue Key: $(cat jira_key.txt)"

        # 이슈 업데이트 REST Api에서 활용
      - name: Install jq 
        if: github.event.action == 'edited'
        run: sudo apt-get install jq

      - name: Update Jira Issue
        if: github.event.action == 'edited'
        run: |
          # GitHub 이슈 제목에서 맨 앞의 Ticket Number(TODAK-###)를 제거
          summary=$(echo "${{ github.event.issue.title }}" | sed -E 's/^TODAK-[0-9]+ *//')
        
          description="${{ steps.md2jira.outputs.output-text }}"
          parent_key="${{ steps.issue-parser.outputs.issueparser_parentKey }}"
      
          # JSON 데이터를 jq를 사용하여 안전하게 생성
          json_payload=$(jq -n \
            --arg summary "$summary" \
            --arg description "$description" \
            --arg parent_key "$parent_key" \
            '{
              fields: {
                summary: $summary,
                description: $description,
                parent: {
                  key: $parent_key
                }
              }
            }')
      
          echo "JSON payload: $json_payload"
      
          # API 요청
          curl -X PUT \
            --url "${{ secrets.JIRA_BASE_URL }}/rest/api/2/issue/$(cat jira_key.txt)" \
            --user "${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "$json_payload"

      # Jira 이슈 닫기 (Transition to Done)
      - name: Close Jira Issue
        if: github.event.action == 'closed'
        id: close
        run: |
          curl -X POST \
          --url "${{ secrets.JIRA_BASE_URL }}/rest/api/2/issue/$(cat jira_key.txt)/transitions" \
          --user "${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{
            "transition": {
              "id": "31"
            }
          }'

      # GitHub 이슈가 열릴 때만 브랜치 생성 로직 실행
      - name: Checkout develop code
        if: github.event.action == 'opened'
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: Create branch with Ticket number
        if: github.event.action == 'opened'
        run: |
          git checkout -b ${{ steps.create-jira-issue.outputs.issue }}
          git push origin ${{ steps.create-jira-issue.outputs.issue }}

      # 이슈 제목 업데이트
      - name: Update issue title
        if: github.event.action == 'opened'
        uses: actions-cool/issues-helper@v3
        with:
          actions: "update-issue"
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "${{ steps.create-jira-issue.outputs.issue }} ${{ github.event.issue.title }}"
